package DBLayer;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import Modellayer.Employee;
import Modellayer.Order;
import Modellayer.Orderline;
import Modellayer.Product;

public class OrderDB implements OrderDBIF {

    @Override
    public Order addOrder(Order o) {
        DBConnection dbConnection = DBConnection.getInstance();

        try {
            Connection connection = dbConnection.getConnection();
            PreparedStatement orderStatement = connection.prepareStatement("INSERT INTO [order] (totalPrice, deliveryDate, deliverystatus, date, customerID, employeeNr, invoiceNr) VALUES (?, ?, ?, ?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
            double totalPrice = o.getTotalPrice();
            BigDecimal total = new BigDecimal(totalPrice);
            orderStatement.setBigDecimal(1, total);
            orderStatement.setString(2, null);
            orderStatement.setString(3, null);
            orderStatement.setString(4, "" + o.getDate() + "");
            orderStatement.setInt(5, o.getCustomer().getCustomerNr());
            orderStatement.setInt(6, o.getEmployee().getEmployeeNr());
            orderStatement.setNull(7, java.sql.Types.INTEGER);
            orderStatement.executeUpdate();
            ResultSet generatedKeys = orderStatement.getGeneratedKeys();
            generatedKeys.next();
            int orderID = generatedKeys.getInt(1);
            generatedKeys.close();
            orderStatement.close();

            PreparedStatement orderLineStatement = connection.prepareStatement("INSERT INTO orderLine (quantity, productID, orderID) VALUES (?, ?, ?)");
            for (Orderline ol : o.getOrderLines()) {
                orderLineStatement.setInt(1, ol.getQuantity());
                orderLineStatement.setInt(2, ol.getProduct().getProductID());
                orderLineStatement.setInt(3, orderID); // set the orderLine_ID to the orderID generated by the database
                orderLineStatement.executeUpdate();
            }
            orderLineStatement.close();

            // Set the orderID for the order
            o.setOrderID(orderID);

            return o;
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    @Override
    public void invoice(Order o) {
        DBConnection dbConnection = DBConnection.getInstance();

        try {
            Connection connection = dbConnection.getConnection();

            // Check if the order has already been invoiced
            PreparedStatement checkStatement = connection.prepareStatement("SELECT COUNT(*) FROM invoice WHERE orderID = ?");
            checkStatement.setInt(1, o.getOrderID());
            ResultSet checkResult = checkStatement.executeQuery();
            checkResult.next();
            int count = checkResult.getInt(1);
            checkResult.close();
            checkStatement.close();
            if (count > 0) {
                // The order has already been invoiced, do nothing
                return;
            }

            // Create the invoice
            PreparedStatement invoiceStatement = connection.prepareStatement("INSERT INTO invoice (date, orderID) VALUES (?, ?)", Statement.RETURN_GENERATED_KEYS);
            invoiceStatement.setString(1, o.getDate().toString());
            invoiceStatement.setInt(2, o.getOrderID());
            invoiceStatement.executeUpdate();

            // Get the generated invoice ID
            ResultSet generatedKeys = invoiceStatement.getGeneratedKeys();
            generatedKeys.next();
            int invoiceID = generatedKeys.getInt(1);
            generatedKeys.close();
            invoiceStatement.close();

            // Set the invoiceID for the order
            o.setInvoiceID(invoiceID);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

	@Override
	public Order buildObject(ResultSet rs) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void buildObjects(ResultSet rs) {
		// TODO Auto-generated method stub
		
	}
}

